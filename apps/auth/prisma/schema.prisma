// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/auth-service"
}

generator nestgraphql {
    provider = "prisma-nestjs-graphql"
    fields_Validator_from = "class-validator"
    fields_Validator_input = true
    output = "../src/@types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Permission {
  id                    String    @id @default(uuid())
  title                 String    @db.VarChar(100) @unique
  description           String?   @db.VarChar(250) @default("")
  created               DateTime  @default(now())
  updated               DateTime  @updatedAt
  roles                 Role[]
}

model Role {
  id                    String    @id @default(uuid())
  title                 String    @db.VarChar(100) @unique
  description           String?   @db.VarChar(250) @default("")
  created               DateTime  @default(now())
  updated               DateTime  @updatedAt
  permissions           Permission[]
  users                 User[]
}


model User {
  /// @Validator.IsUUID()
  id                    String    @id @default(uuid())
  /// @Validator.IsEmail()
  /// @FieldType({ name: 'Scalars.GraphQLEmailAddress', from: 'graphql-scalars', input: true })
  email                 String    @db.VarChar(100) @unique
  /// @HideField()
  /// @Validator.MinLength(8)
  password              String    @db.Char(255)
  /// @Validator.IsBoolean()
  isActive              Boolean?  @default(false)
  /// @Validator.IsDate()
  created               DateTime  @default(now())
  /// @Validator.IsDate()
  updated               DateTime  @updatedAt

  roleId                String
  role                  Role      @relation(fields: [roleId], references: [id], onDelete: NoAction)

  @@index([isActive(sort: Desc)])
}
